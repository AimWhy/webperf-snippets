Name = LCP Details

URL = 
javascript:(function()%7Bconst LCP_SUB_PARTS %3D %5B%0A  'Time to first byte'%2C%0A  'Resource load delay'%2C%0A  'Resource load time'%2C%0A  'Element render delay'%2C%0A%5D%3B%0A%0Anew PerformanceObserver((list) %3D> %7B%0A  const lcpEntry %3D list.getEntries().at(-1)%3B%0A  const navEntry %3D performance.getEntriesByType('navigation')%5B0%5D%3B%0A  const lcpResEntry %3D performance%0A    .getEntriesByType('resource')%0A    .filter((e) %3D> e.name %3D%3D%3D lcpEntry.url)%5B0%5D%3B%0A%0A  %2F%2F Ignore LCP entries that aren't images to reduce DevTools noise.%0A  %2F%2F Comment this line out if you want to include text entries.%0A  %2F%2F if (!lcpEntry.url) return%3B%0A%0A  %2F%2F Compute the start and end times of each LCP sub-part.%0A  %2F%2F WARNING! If your LCP resource is loaded cross-origin%2C make sure to add%0A  %2F%2F the %60Timing-Allow-Origin%60 (TAO) header to get the most accurate results.%0A  const ttfb %3D navEntry.responseStart%3B%0A  const lcpRequestStart %3D Math.max(%0A    ttfb%2C%0A    %2F%2F Prefer %60requestStart%60 (if TOA is set)%2C otherwise use %60startTime%60.%0A    lcpResEntry %3F lcpResEntry.requestStart %7C%7C lcpResEntry.startTime %3A 0%0A  )%3B%0A  const lcpResponseEnd %3D Math.max(%0A    lcpRequestStart%2C%0A    lcpResEntry %3F lcpResEntry.responseEnd %3A 0%0A  )%3B%0A  const lcpRenderTime %3D Math.max(%0A    lcpResponseEnd%2C%0A    %2F%2F Prefer %60renderTime%60 (if TOA is set)%2C otherwise use %60loadTime%60.%0A    lcpEntry %3F lcpEntry.renderTime %7C%7C lcpEntry.loadTime %3A 0%0A  )%3B%0A%0A  %2F%2F Clear previous measures before making new ones.%0A  %2F%2F Note%3A due to a bug this does not work in Chrome DevTools.%0A  LCP_SUB_PARTS.forEach((part) %3D> performance.clearMeasures(part))%3B%0A%0A  %2F%2F Create measures for each LCP sub-part for easier%0A  %2F%2F visualization in the Chrome DevTools Performance panel.%0A  const lcpSubPartMeasures %3D %5B%0A    performance.measure(LCP_SUB_PARTS%5B0%5D%2C %7B%0A      start%3A 0%2C%0A      end%3A ttfb%2C%0A    %7D)%2C%0A    performance.measure(LCP_SUB_PARTS%5B1%5D%2C %7B%0A      start%3A ttfb%2C%0A      end%3A lcpRequestStart%2C%0A    %7D)%2C%0A    performance.measure(LCP_SUB_PARTS%5B2%5D%2C %7B%0A      start%3A lcpRequestStart%2C%0A      end%3A lcpResponseEnd%2C%0A    %7D)%2C%0A    performance.measure(LCP_SUB_PARTS%5B3%5D%2C %7B%0A      start%3A lcpResponseEnd%2C%0A      end%3A lcpRenderTime%2C%0A    %7D)%2C%0A  %5D%3B%0A%0A  %2F%2F Log helpful debug information to the console.%0A  console.log('LCP value%3A '%2C lcpRenderTime)%3B%0A  console.log('LCP element%3A '%2C lcpEntry.element%2C lcpEntry.url)%3B%0A  console.table(%0A    lcpSubPartMeasures.map((measure) %3D> (%7B%0A      'LCP sub-part'%3A measure.name%2C%0A      'Time (ms)'%3A measure.duration%2C%0A      '%25 of LCP'%3A %60%24%7B%0A        Math.round((1000 * measure.duration) %2F lcpRenderTime) %2F 10%0A      %7D%25%60%2C%0A    %7D))%0A  )%3B%0A%7D).observe(%7Btype%3A 'largest-contentful-paint'%2C buffered%3A true%7D)%3B%7D)()%3B
